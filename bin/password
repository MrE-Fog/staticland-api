#!/usr/bin/env node

var exit = require('exit')
var level = require('level-party')
var config = require('../config')
var db = config.db || level(config.dbDir)
  var requiredScopes = config.requiredScopes
  var basic = require('township-auth/basic')
  var jwt = require('township-token')({ secret: config.secret })
  var access = require('township-access')(db)
  var auth = require('township-auth')(db, {
    providers: { basic: basic }
  })

var email = process.argv[2]
var password = process.argv[3]
var requiredScopes = config.requiredScopes

if (!email) {
  error('email is required', { usage: true })
}

if (!password) {
  error('password is required', { usage: true })
}

var creds = {
  basic: {
    email: email,
    password: password
  }
}

auth.findOne('basic', email, function (err, account) {
  if (err) return error(err.message)
  creds.key = account.key
  auth.update(creds, function (err, updated) {
    if (err) return error(err.message)
    console.log('updated', updated)
  })
})

function error (msg, opts) {
  console.log(`
    ERROR:

      ${msg}
  `)
  if (opts.usage) usage()
  exit(1)
}

function usage () {
  console.log(`
    USAGE:

      ./bin/password {email} {new password}

    EXAMPLE:

      ./bin/password hi@static.land oooohsecretpasswordoooh
`)
}
